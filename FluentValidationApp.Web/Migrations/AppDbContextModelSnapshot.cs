// <auto-generated />
using System;
using FluentValidationApp.Web.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FluentValidationApp.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FluentValidationApp.Web.Models.AcuerdoEquipos", b =>
                {
                    b.Property<long>("AcuerdoEquipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("ACUERDO_MULTIPLE")
                        .HasColumnType("bit");

                    b.Property<string>("CFM_BA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_CICLO_FACTURA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_CUENTA_FINANCIERA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_ESTADO_ACUERDO_FINANC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_F_CREA_ACUERDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_ID_ACUERDO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_ID_SUSCRIPTOR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_LOTE_CARGA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_MONTO_FINANCIADO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_MTO_DEUDA_PENDIENTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_NUM_CUOTAS_NEGOCIADAS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_NUM_DOCUMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_SAP_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_SERIE_EQUIPO_IMEI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_TELEFONO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_TIPO_COMPROBANTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_TIPO_DOCUMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CICLOID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FECHA")
                        .HasColumnType("datetime2");

                    b.HasKey("AcuerdoEquipoId");

                    b.ToTable("AcuerdoEquipos");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.AcuerdoEquiposCuotas", b =>
                {
                    b.Property<long>("AcuerdoEquiposCuotasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AcuerdoEquipoId")
                        .HasColumnType("bigint");

                    b.Property<string>("CFM_ESTADO_CUOTA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_F_ENVIO_CUOTA_MENSUAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_F_VENC_RECIBO_CICLO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_ID_ACUERDO_CUOTA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_ID_CUOTA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_MONTO_CUOTA_MENSUAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_NUM_CUOTA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CFM_NUM_RECIBO_CICLO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CICLICARECIBO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DETALLERECIBOID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FECHA_CREACION")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_UPDATE")
                        .HasColumnType("datetime2");

                    b.Property<long?>("RECIBOID")
                        .HasColumnType("bigint");

                    b.HasKey("AcuerdoEquiposCuotasId");

                    b.ToTable("AcuerdoEquiposCuotas");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.AgrupacionCargo", b =>
                {
                    b.Property<long>("AgrupacionCargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaCargoId")
                        .HasColumnType("int");

                    b.HasKey("AgrupacionCargoId");

                    b.HasIndex("CategoriaCargoId");

                    b.ToTable("AgrupacionCargo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.AjusteRecibo", b =>
                {
                    b.Property<long>("AjusteReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontoAjustado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoAjustadoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TipoAjusteReciboId")
                        .HasColumnType("int");

                    b.HasKey("AjusteReciboId");

                    b.HasIndex("ReciboId");

                    b.HasIndex("TipoAjusteReciboId");

                    b.ToTable("AjusteRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Baja", b =>
                {
                    b.Property<long>("BajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBaja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaFinanciera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BajaId");

                    b.HasIndex("ReciboId");

                    b.ToTable("Baja");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Base_App_movil_Incremento2022_C17", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AplicaCambioPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AplicaDescuento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AplicaTratamientoComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_digo_de_Componente_Antiguo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_digo_de_Componente_Nuevo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Componente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Datos_Internet")
                        .HasColumnType("float");

                    b.Property<string>("Datos_Internet_Nuevo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_de_incremento")
                        .HasColumnType("datetime2");

                    b.Property<string>("MES_INCREMENTADO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MES_VENCIMIENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Monto_Componente_Antiguo")
                        .HasColumnType("float");

                    b.Property<double>("Monto_Componente_Nuevo")
                        .HasColumnType("float");

                    b.Property<double>("Monto_de_descuento_06_meses")
                        .HasColumnType("float");

                    b.Property<double>("Monto_de_incremento")
                        .HasColumnType("float");

                    b.Property<string>("Nombre_Plan_Antiguo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_Plan_Nuevo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_de_gestion_Fija_o_Movil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan_anterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan_con_incremento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renta_paquete_anterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renta_paquete_nuevo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIPO_INCREMENTO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono_fijo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Base_App_movil_Incremento2022_C17");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CAMPAÑA_FIJA_MIG_FRACCIONAMIENTO_20220307__1_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ANEXO")
                        .HasColumnType("int");

                    b.Property<int>("CLIENTE")
                        .HasColumnType("int");

                    b.Property<string>("CLUSTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOB_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_CLUSTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TELEFONO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TELF_LEG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CampanaFijaFrac");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CAMPAÑA_FIJA_MIG_FRACC_75_20220202", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ANEXO")
                        .HasColumnType("int");

                    b.Property<int>("CLIENTE")
                        .HasColumnType("int");

                    b.Property<string>("CLUSTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOB_TYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUB_CLUSTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TELEFONO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TELF_LEG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CampanaFijaMig");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CAMPAÑA_MOVIL_FRACC_50_DSCTO_CARIBU_20220202__1_", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ANEXO")
                        .HasColumnType("int");

                    b.Property<string>("CLUSTER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FINANCIAL_ACCOUNT_KEY")
                        .HasColumnType("int");

                    b.Property<string>("TELEFONO")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CampanaFracMovil");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CampaniaFinanciamiento", b =>
                {
                    b.Property<long>("CampaniaFinanciamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.HasKey("CampaniaFinanciamientoId");

                    b.ToTable("CampaniaFinanciamiento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CampaniaGeneral", b =>
                {
                    b.Property<int>("CampaniaGeneralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCampania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("CampaniaGeneralId");

                    b.ToTable("CampaniaGeneral");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Carga", b =>
                {
                    b.Property<long>("CargaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Ciclo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaProgramada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("creado")
                        .HasColumnType("datetime2");

                    b.HasKey("CargaId");

                    b.ToTable("Cargas");

                    b.HasData(
                        new
                        {
                            CargaId = 1L,
                            Ciclo = new DateTime(2022, 8, 28, 16, 47, 39, 39, DateTimeKind.Local).AddTicks(9903),
                            Estado = "",
                            FechaProgramada = new DateTime(2022, 8, 28, 16, 47, 39, 41, DateTimeKind.Local).AddTicks(1483),
                            Fin = new DateTime(2022, 8, 28, 16, 47, 39, 41, DateTimeKind.Local).AddTicks(2888),
                            Hora = "",
                            Inicio = new DateTime(2022, 8, 28, 16, 47, 39, 41, DateTimeKind.Local).AddTicks(2498),
                            Tipo = "",
                            Usuario = "",
                            creado = new DateTime(2022, 8, 28, 16, 47, 39, 41, DateTimeKind.Local).AddTicks(3357)
                        });
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CargaEstado", b =>
                {
                    b.Property<long>("CargaEstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargaEstadoId");

                    b.ToTable("CargaEstados");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CargaExtraccion", b =>
                {
                    b.Property<long>("CargaExtraccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CargaId")
                        .HasColumnType("bigint");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.HasKey("CargaExtraccionId");

                    b.ToTable("CargaExtraccion");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CargaExtraccionTabla", b =>
                {
                    b.Property<long>("CargaExtraccionTablaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CargaExtraccionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreBrainy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreLegado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargaExtraccionTablaId");

                    b.ToTable("CargaExtraccionTablas");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CargaOrigen", b =>
                {
                    b.Property<long>("CargaOrigenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Legado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargaOrigenId");

                    b.ToTable("CargaOrigenes");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Cargo", b =>
                {
                    b.Property<long>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AgrupacionCargoId")
                        .HasColumnType("bigint");

                    b.Property<int>("CategoriaCargoId")
                        .HasColumnType("int");

                    b.Property<string>("ChargeCodeKeyMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<string>("Clasificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CofaVO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsGestionableBaja")
                        .HasColumnType("bit");

                    b.Property<bool>("EsReclamable")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsReclamableBU")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsRentaCargo")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsRentaVencida")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsVelocidadInternet")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MontoPlan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoReferencial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OrigenDato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCatalogKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Traduccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CargoId");

                    b.HasIndex("AgrupacionCargoId");

                    b.HasIndex("CategoriaCargoId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CategoriaCargo", b =>
                {
                    b.Property<int>("CategoriaCargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgrupacionCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionPlural")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.HasKey("CategoriaCargoId");

                    b.ToTable("CategoriaCargo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Ciclo", b =>
                {
                    b.Property<int>("CicloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AdmiteMT")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoAtis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiaEmision")
                        .HasColumnType("int");

                    b.Property<int>("DiaReinicio")
                        .HasColumnType("int");

                    b.Property<bool?>("OrigenALDM")
                        .HasColumnType("bit");

                    b.Property<bool?>("OrigenAtis")
                        .HasColumnType("bit");

                    b.Property<bool?>("PagoMesAnterior")
                        .HasColumnType("bit");

                    b.Property<bool?>("PagoMesAnteriorFE")
                        .HasColumnType("bit");

                    b.Property<int>("UltimoDiaPago")
                        .HasColumnType("int");

                    b.HasKey("CicloId");

                    b.ToTable("Ciclo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.ClienteAsociado", b =>
                {
                    b.Property<long>("ClienteAsociadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ContactoId")
                        .HasColumnType("bigint");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteAsociadoId");

                    b.HasIndex("ContactoId");

                    b.ToTable("ClienteAsociado");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.ConfiguracionFinanciamiento", b =>
                {
                    b.Property<long>("ConfiguracionFinanciamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CampaniaFinanciamientoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Ciclica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CicloId")
                        .HasColumnType("int");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.HasKey("ConfiguracionFinanciamientoId");

                    b.HasIndex("CampaniaFinanciamientoId");

                    b.HasIndex("CicloId");

                    b.ToTable("ConfiguracionFinanciamiento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Contacto", b =>
                {
                    b.Property<long>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CuentaCliente", b =>
                {
                    b.Property<long>("CuentaClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteAsociadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaFinanciera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsMasSimple")
                        .HasColumnType("bit");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNumero")
                        .HasColumnType("int");

                    b.HasKey("CuentaClienteId");

                    b.HasIndex("ClienteAsociadoId");

                    b.HasIndex("TipoClienteId");

                    b.ToTable("CuentaCliente");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DescuentoIncremento", b =>
                {
                    b.Property<long>("DescuentoIncrementoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaniaGeneralId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoDescuento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DatosInternet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DatosInternetNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("EsRentaVencida")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MontoDescuentoMes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivoDescuento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("TieneDeuda")
                        .HasColumnType("bit");

                    b.Property<string>("TipoIncremento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DescuentoIncrementoId");

                    b.HasIndex("ReciboId");

                    b.ToTable("DescuentoIncremento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleBaja", b =>
                {
                    b.Property<long>("DetalleBajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BajaId")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DetalleReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleBajaId");

                    b.HasIndex("BajaId");

                    b.HasIndex("DetalleReciboId");

                    b.ToTable("DetalleBaja");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleFinanciamiento", b =>
                {
                    b.Property<long>("DetalleFinanciamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ArInvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("BillingInvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CiclicaBU")
                        .HasColumnType("datetime2");

                    b.Property<string>("CuentaFinanciera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacionDeuda")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimientoDeuda")
                        .HasColumnType("datetime2");

                    b.Property<long>("FinanciamientoId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoExcluido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoSinCuotasFinanciamiento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboIdBU")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumentoDeuda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumentoDeudaBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMonto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetalleFinanciamientoId");

                    b.HasIndex("FinanciamientoId");

                    b.HasIndex("ReciboId");

                    b.ToTable("DetalleFinanciamiento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleLogDescargaRecibo", b =>
                {
                    b.Property<long>("DetalleLogDescargaReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("LogDescargaReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetalleLogDescargaReciboId");

                    b.HasIndex("LogDescargaReciboId");

                    b.ToTable("DetalleLogDescargaRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleRecibo", b =>
                {
                    b.Property<long>("DetalleReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<string>("ChargeCodeKeyMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeIdAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeRequestIdMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeServRecvIdMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CuotaActual")
                        .HasColumnType("int");

                    b.Property<int?>("CuotaTotal")
                        .HasColumnType("int");

                    b.Property<int?>("DuracionPromo")
                        .HasColumnType("int");

                    b.Property<string>("Equipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsDescuentoPlan")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsFacturadoCompleto")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsPartePlan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrupoDetalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntervaloPromo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoDisputado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoDisputadoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFacturado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFacturadoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoRestringido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoRestringidoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaqueteId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PorcentajePromo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("ProductoServicioId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoAfectacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VelocidadInternet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetalleReciboId");

                    b.HasIndex("CargoId");

                    b.HasIndex("ReciboId");

                    b.ToTable("DetalleRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleReclamo", b =>
                {
                    b.Property<int>("SolicitudReclamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ajustado")
                        .HasColumnType("bit");

                    b.Property<long?>("CargoIdBU")
                        .HasColumnType("bigint");

                    b.Property<int>("CasoCRM")
                        .HasColumnType("int");

                    b.Property<string>("CiclicaReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DetalleReciboId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DetalleReciboIdBU")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EsFraccionado")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFinBU")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioBU")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaMovimientoBU")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoBU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MotivoReclamoId")
                        .HasColumnType("int");

                    b.Property<string>("NotaCredito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboIdBU")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReclamoId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SolicitudReclamoId");

                    b.HasIndex("MotivoReclamoId");

                    b.HasIndex("ReclamoId");

                    b.ToTable("DetalleReclamo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DocumentoAciclico", b =>
                {
                    b.Property<long>("DocumentoAciclicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CargoReferenciadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("ChargeCodeKeyMovil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<string>("CodigoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsCargoDevolucion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFinCargoDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFacturado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFacturadoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductoServicioId")
                        .HasColumnType("bigint");

                    b.Property<long>("ReciboAsociadoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentoAciclicoId");

                    b.HasIndex("CargoId");

                    b.HasIndex("ReciboId");

                    b.ToTable("DocumentoAciclico");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Financiamiento", b =>
                {
                    b.Property<long>("FinanciamientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BA")
                        .HasColumnType("bigint");

                    b.Property<long?>("BABU")
                        .HasColumnType("bigint");

                    b.Property<long>("CampaniaFinanciamientoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Canal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadCuota")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CiclicaReciboBU")
                        .HasColumnType("datetime2");

                    b.Property<int>("CicloId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoAgrupador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CodigoCliente")
                        .HasColumnType("bigint");

                    b.Property<long?>("CodigoClienteBU")
                        .HasColumnType("bigint");

                    b.Property<string>("CodigoFinanciamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoFinanciamientoBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPlanFinanciamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPlanFinanciamientoBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CuentaFinanciera")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DeudaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DeudaVencida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ErrorGeneracionArchivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsDuplicado")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsMasSimple")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsPrimerFinanciamiento")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoFTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FinanciamientoArchivoFTPId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Moneda")
                        .HasColumnType("bigint");

                    b.Property<long?>("MonedaBU")
                        .HasColumnType("bigint");

                    b.Property<decimal>("MontoCuota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoCuotaDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoCuotasPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoFinanciado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFinanciadoDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoFinanciamientoExcliudo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PorcentajeDescuentoFinanciamiento")
                        .HasColumnType("int");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboIdAux")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboIdAux2")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboIdBU")
                        .HasColumnType("bigint");

                    b.Property<string>("RespuestaFTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuscriberId")
                        .HasColumnType("int");

                    b.Property<int?>("SuscriberIdBU")
                        .HasColumnType("int");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoNumeroBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FinanciamientoId");

                    b.HasIndex("CampaniaFinanciamientoId");

                    b.HasIndex("CicloId");

                    b.HasIndex("ReciboId");

                    b.ToTable("Financiamiento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Incremento", b =>
                {
                    b.Property<long>("IncrementoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsAutogestionable")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsRentaVencida")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoIncremento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncrementoId");

                    b.ToTable("Incremento");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargo", b =>
                {
                    b.Property<long>("IncrementoCargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CargoIdNew")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("DatosInternet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DatosInternetNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IncrementoId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombrePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePlanNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("planCd")
                        .HasColumnType("bigint");

                    b.HasKey("IncrementoCargoId");

                    b.HasIndex("CargoId");

                    b.HasIndex("IncrementoId");

                    b.ToTable("IncrementoCargo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargoFija", b =>
                {
                    b.Property<long>("IncrementoCargoFijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CargoIdNew")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncrementoClienteId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IncrementoId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoNew")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IncrementoCargoFijaId");

                    b.HasIndex("IncrementoClienteId");

                    b.HasIndex("IncrementoId");

                    b.ToTable("IncrementoCargoFija");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargoFijaMasSimple", b =>
                {
                    b.Property<long>("IncrementoCargoFijaMasSimpleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoCargoNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DatosInternet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DatosInternetNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IncrementoClienteId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombrePlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePlanNew")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("planCd")
                        .HasColumnType("bigint");

                    b.HasKey("IncrementoCargoFijaMasSimpleId");

                    b.HasIndex("IncrementoClienteId");

                    b.ToTable("IncrementoCargoFijaMasSimple");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCliente", b =>
                {
                    b.Property<long>("IncrementoClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AplicaAutogestion")
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCambioPlan")
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaDescuento")
                        .HasColumnType("bit");

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("FechaIncremento")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IncrementoId")
                        .HasColumnType("bigint");

                    b.Property<string>("MesIncremento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MesIncrementoVence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<int?>("VistasPopup")
                        .HasColumnType("int");

                    b.HasKey("IncrementoClienteId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("IncrementoId");

                    b.ToTable("IncrementoCliente");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.LogDescargaRecibo", b =>
                {
                    b.Property<long>("LogDescargaReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("EsDescargar")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsVisualizar")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Origen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.HasKey("LogDescargaReciboId");

                    b.HasIndex("ReciboId");

                    b.ToTable("LogDescargaRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.LoginMT", b =>
                {
                    b.Property<long>("LoginMTId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ciclica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ContadorIntentoFallido")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaIntentoSesion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoginMTId");

                    b.HasIndex("ClienteId");

                    b.ToTable("LoginMT");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.MotivoReclamo", b =>
                {
                    b.Property<int>("MotivoReclamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaCargoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<int?>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("TipoCargo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MotivoReclamoId");

                    b.HasIndex("CategoriaCargoId");

                    b.ToTable("MotivoReclamo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Recibo", b =>
                {
                    b.Property<long>("ReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Ciclica")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CicloId")
                        .HasColumnType("int");

                    b.Property<long?>("CuentaClienteId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("EsAgrupado")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsMasSimple")
                        .HasColumnType("bit");

                    b.Property<bool?>("EstaPagado")
                        .HasColumnType("bit");

                    b.Property<string>("EstadoLinea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoIGV")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaqActual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaqAnterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMonedaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPaq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Variacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("VisualizacionIncremento")
                        .HasColumnType("smallint");

                    b.HasKey("ReciboId");

                    b.HasIndex("CicloId");

                    b.HasIndex("CuentaClienteId");

                    b.ToTable("Recibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Reclamo", b =>
                {
                    b.Property<long>("ReclamoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaniaGeneralId")
                        .HasColumnType("int");

                    b.Property<string>("CasoCRM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CerrarCasoTransaccionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiclicaReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoSAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DeudaRegistrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiasAveria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsAveria")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsIncremento")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsMasSimple")
                        .HasColumnType("bit");

                    b.Property<bool?>("EsRentaVencida")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroReciboBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReciboIdBU")
                        .HasColumnType("bigint");

                    b.Property<int?>("ServicioAveria")
                        .HasColumnType("int");

                    b.Property<bool>("SmsEnviado")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneDeuda")
                        .HasColumnType("bit");

                    b.Property<bool?>("TieneReclamoPiloto")
                        .HasColumnType("bit");

                    b.Property<string>("TipoAveria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoIncremento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoRecibo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReclamoId");

                    b.ToTable("Reclamo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TipoAjusteRecibo", b =>
                {
                    b.Property<int>("TipoAjusteReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaCargoId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoAjusteReciboId");

                    b.HasIndex("CategoriaCargoId");

                    b.ToTable("TipoAjusteRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TipoCliente", b =>
                {
                    b.Property<int>("TipoClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoClienteId");

                    b.ToTable("TipoCliente");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TipoReciboVariacion", b =>
                {
                    b.Property<int>("TipoReciboVariacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoReciboVariacionId");

                    b.ToTable("TipoReciboVariacion");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TipoVariacion", b =>
                {
                    b.Property<int>("TipoVariacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoVariacionId");

                    b.ToTable("TipoVariacion");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TokenSesion", b =>
                {
                    b.Property<long>("TokenSesionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContadorIntentoFallido")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("FechaIntentoSesion")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TokenSesionId");

                    b.HasIndex("ReciboId");

                    b.ToTable("TokenSesion");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.VariacionRecibo", b =>
                {
                    b.Property<long>("VariacionReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ReciboId")
                        .HasColumnType("bigint");

                    b.Property<int?>("TipoReciboVariacionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoVariacionId")
                        .HasColumnType("int");

                    b.HasKey("VariacionReciboId");

                    b.HasIndex("ReciboId");

                    b.HasIndex("TipoReciboVariacionId");

                    b.HasIndex("TipoVariacionId");

                    b.ToTable("VariacionRecibo");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Address", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Customer", "Customer")
                        .WithMany("Adresses")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.AgrupacionCargo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.CategoriaCargo", "CategoriaCargo")
                        .WithMany("AgrupacionCargo1")
                        .HasForeignKey("CategoriaCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.AjusteRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("AjusteRecibo")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.TipoAjusteRecibo", "TipoAjusteRecibo")
                        .WithMany("AjusteRecibo")
                        .HasForeignKey("TipoAjusteReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Baja", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("Baja")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Cargo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.AgrupacionCargo", "AgrupacionCargo")
                        .WithMany("Cargo")
                        .HasForeignKey("AgrupacionCargoId");

                    b.HasOne("FluentValidationApp.Web.Models.CategoriaCargo", "CategoriaCargo")
                        .WithMany("Cargo")
                        .HasForeignKey("CategoriaCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.ClienteAsociado", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Contacto", "Contacto")
                        .WithMany("ClienteAsociado")
                        .HasForeignKey("ContactoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.ConfiguracionFinanciamiento", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.CampaniaFinanciamiento", "CampaniaFinanciamiento")
                        .WithMany("ConfiguracionFinanciamiento")
                        .HasForeignKey("CampaniaFinanciamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Ciclo", "Ciclo")
                        .WithMany("ConfiguracionFinanciamiento")
                        .HasForeignKey("CicloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Contacto", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cliente", "Cliente")
                        .WithMany("Contacto")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.CuentaCliente", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.ClienteAsociado", "ClienteAsociado")
                        .WithMany("CuentaCliente")
                        .HasForeignKey("ClienteAsociadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.TipoCliente", "TipoCliente")
                        .WithMany("CuentaCliente")
                        .HasForeignKey("TipoClienteId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DescuentoIncremento", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("DescuentoIncremento")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleBaja", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Baja", "Baja")
                        .WithMany("DetalleBaja")
                        .HasForeignKey("BajaId");

                    b.HasOne("FluentValidationApp.Web.Models.DetalleRecibo", "DetalleRecibo")
                        .WithMany("DetalleBaja")
                        .HasForeignKey("DetalleReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleFinanciamiento", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Financiamiento", "Financiamiento")
                        .WithMany("DetalleFinanciamiento")
                        .HasForeignKey("FinanciamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("DetalleFinanciamiento")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleLogDescargaRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.LogDescargaRecibo", "LogDescargaRecibo")
                        .WithMany("DetalleLogDescargaRecibo")
                        .HasForeignKey("LogDescargaReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cargo", "Cargo")
                        .WithMany("DetalleRecibo")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("DetalleRecibo")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DetalleReclamo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.MotivoReclamo", "MotivoReclamo")
                        .WithMany("DetalleReclamo")
                        .HasForeignKey("MotivoReclamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Reclamo", "Reclamo")
                        .WithMany("DetalleReclamo")
                        .HasForeignKey("ReclamoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.DocumentoAciclico", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cargo", "Cargo")
                        .WithMany("DocumentoAciclico")
                        .HasForeignKey("CargoId");

                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("DocumentoAciclico")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Financiamiento", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.CampaniaFinanciamiento", "CampaniaFinanciamiento")
                        .WithMany("Financiamiento")
                        .HasForeignKey("CampaniaFinanciamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Ciclo", "Ciclo")
                        .WithMany("Financiamiento")
                        .HasForeignKey("CicloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("Financiamiento")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cargo", "Cargo")
                        .WithMany("IncrementoCargo")
                        .HasForeignKey("CargoId");

                    b.HasOne("FluentValidationApp.Web.Models.Incremento", "Incremento")
                        .WithMany("IncrementoCargo")
                        .HasForeignKey("IncrementoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargoFija", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.IncrementoCliente", "IncrementoCliente")
                        .WithMany("IncrementoCargoFija")
                        .HasForeignKey("IncrementoClienteId");

                    b.HasOne("FluentValidationApp.Web.Models.Incremento", "Incremento")
                        .WithMany("IncrementoCargoFija")
                        .HasForeignKey("IncrementoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCargoFijaMasSimple", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.IncrementoCliente", "IncrementoCliente")
                        .WithMany("IncrementoCargoFijaMasSimple")
                        .HasForeignKey("IncrementoClienteId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.IncrementoCliente", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cliente", "Cliente")
                        .WithMany("IncrementoCliente")
                        .HasForeignKey("ClienteId");

                    b.HasOne("FluentValidationApp.Web.Models.Incremento", "Incremento")
                        .WithMany("IncrementoCliente")
                        .HasForeignKey("IncrementoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.LogDescargaRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("LogDescargaRecibo")
                        .HasForeignKey("ReciboId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.LoginMT", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Cliente", "Cliente")
                        .WithMany("LoginMT")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.MotivoReclamo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.CategoriaCargo", "CategoriaCargo")
                        .WithMany("MotivoReclamo")
                        .HasForeignKey("CategoriaCargoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.Recibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Ciclo", "Ciclo")
                        .WithMany("Recibo")
                        .HasForeignKey("CicloId");

                    b.HasOne("FluentValidationApp.Web.Models.CuentaCliente", "CuentaCliente")
                        .WithMany("Recibo")
                        .HasForeignKey("CuentaClienteId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TipoAjusteRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.CategoriaCargo", "CategoriaCargo")
                        .WithMany("TipoAjusteRecibo")
                        .HasForeignKey("CategoriaCargoId");
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.TokenSesion", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("TokenSesion")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FluentValidationApp.Web.Models.VariacionRecibo", b =>
                {
                    b.HasOne("FluentValidationApp.Web.Models.Recibo", "Recibo")
                        .WithMany("VariacionRecibo")
                        .HasForeignKey("ReciboId");

                    b.HasOne("FluentValidationApp.Web.Models.TipoReciboVariacion", "TipoReciboVariacion")
                        .WithMany("VariacionRecibo")
                        .HasForeignKey("TipoReciboVariacionId");

                    b.HasOne("FluentValidationApp.Web.Models.TipoVariacion", "TipoVariacion")
                        .WithMany("VariacionRecibo")
                        .HasForeignKey("TipoVariacionId");
                });
#pragma warning restore 612, 618
        }
    }
}
